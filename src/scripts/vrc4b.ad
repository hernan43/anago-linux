board <- {
	mappernum = 25,
	cpu_romsize = 1 * mega, cpu_banksize = 0x2000,
	ppu_romsize = 1 * mega, ppu_banksize = 0x2000 / 8,
	ppu_ramfind = false, vram_mirrorfind = false
};
function cpu_dump(d, pagesize, banksize)
{
	vrc4_cpu_dump(d, pagesize, banksize, 1, 0);
}

function ppu_dump(d, pagesize, banksize)
{
	vrc4_ppu_dump(d, pagesize, banksize, 1, 0);
}
//dofile("vrc4.ai");
//require("vrc4.ai");

function vrc4_cpu_dump(d, pagesize, banksize, r0, r1)
{
	local a2 = 1 << r1;
	cpu_write(d, 0x9000 | a2, 0);
	for(local i = 0; i < pagesize - 2; i += 2){
		cpu_write(d, 0x8000, i);
		cpu_write(d, 0xa000, i | 1);
		cpu_read(d, 0x8000, banksize * 2);
	}
	cpu_write(d, 0x9000 | a2, 0x02);
	cpu_write(d, 0x8000, 0x1e);
	cpu_read(d, 0xc000, banksize * 2);
}
function ppu_bank_set(d, addr, i, a1, a2, a3)
{
	cpu_write(d, addr | a1, i >> 4);
	cpu_write(d, addr, (i & 0xf) | 0);
	cpu_write(d, addr | a3, i >> 4);
	cpu_write(d, addr | a2, (i & 0xf) | 1);
}
function vrc4_ppu_dump(d, pagesize, banksize, r0, r1)
{
	local a1 = (1 << r0);
	local a2 = (1 << r1);
	local a3 = a1 | a2;
	cpu_write(d, 0x9000 | a2, 0);
	for(local i = 0; i < pagesize; i += 8){
		ppu_bank_set(d, 0xb000, i, a1, a2, a3);
		ppu_bank_set(d, 0xc000, i | 2, a1, a2, a3);
		ppu_bank_set(d, 0xd000, i | 4, a1, a2, a3);
		ppu_bank_set(d, 0xe000, i | 6, a1, a2, a3);
		ppu_read(d, 0x0000, banksize * 8);
	}
}
